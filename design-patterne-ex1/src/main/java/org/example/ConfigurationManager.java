package org.example;

import java.util.HashMap;
import java.util.Map;

public class ConfigurationManager {

    // ----- PropriÃ©tÃ©s -----

    private static ConfigurationManager instance = null; // ğŸ’¡ 1. Instance unique de la classe (statique privÃ©e)
    private final Map<String, String> configurations = new HashMap<>(); // Stockage des configurations

    // ----- Constructeur (ğŸ’¡ 2. Constructeur privÃ© pour empÃªcher l'instanciation) -----

    private ConfigurationManager() {
        System.out.println("Instance Singleton crÃ©Ã©e.");

        configurations.put("db.host", "localhost");
        configurations.put("db.port", "5432");
        configurations.put("app.name", "MyApplication");
    }

    // ----- MÃ©thodes -----

    /**
     * MÃ©thode statique pour rÃ©cupÃ©rer l'instance unique (ğŸ’¡ 3. MÃ©thode d'accÃ¨s en publique pour accÃ©der Ã  cette instance)
     */
    public static ConfigurationManager getInstance() {
        if (instance == null) { // ğŸ’¡ CrÃ©e l'instance si elle n'existe pas encore
            instance = new ConfigurationManager();
        }
        return instance;
    }

    /**
     * Afficher message de test
     */
    public void test() {
        System.out.println("Test ok");
    }

    /**
     * RÃ©cupÃ©rer une configuration par clÃ©
     */
    public String getConfiguration(String key) {
        return configurations.get(key);
    }

}
